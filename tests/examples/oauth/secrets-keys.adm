Model: Client secrets and keys
 	As an attacker
 	I want to access client secrets
 	So that I can masquerade as the original client

	As a defender
 	I want to block access to client secrets

	# Secrets and keys in source code
	@success @yolosec
	Attack: Secrets extracted from code
		Given code repo access
		When repo is scanned
		Then secrets are revealed
	Defense: Don't publish code containing secrets
		When repo is scanned
		And secrets are revealed
		Then release of code is blocked

	# Secrets and keys embedded in application binary
	Attack: Secrets extracted from app binary
	 	Given app binary access
		When binary is scanned
		Then secrets are revealed
	Defense: Don't publish app binary containing secrets
		When binary is scanned
		Then block release of app binary
	
	@yolosec
	Defense: Don't store secrets in config file
	 	Given application uses config files for secrets
 		When config file is scanned
		And secrets are revealed
		Then block release of app binary

	# Secrets and keys stored in web config files
	@success @yolosec
	Attack: Secrets extracted via path traversal
		Given web-application uses input to calculate config file path
		And application uses web-config files for secrets
		When part of config file path is sent to web-application
		Then web-application returns config file contents

	@yolosec
	Attack: Secrets extracted via web-server path traversal
		Given web-application config file exposed via URL
		And secrets and keys are stored in configuration file
		When request contains URL of config file
		Then web-server returns contents of config file

	Attack: Secrets extracted via encoded path in URL
		Given web-server is vulnerable to path traversal via encoded URLs
		And secrets are stored in configuration file
		When request contains encoded URL of config file
		Then web-server returns contents of config file

	Defense: Block encoded paths
		When request contains encoded URL of config file
		Then decode encoded URL
		And block URL

	@apache
	Attack: Secrets extracted via encoded path in URL sent to Apache Web Server
		# This is CVE-2021-41773 & CVE-2021-42013
		Given web-server is Apache (version <= v2.5.50)
		And secrets are stored in configuration file
		When request to Apache Web Server contains encoded URL of config file
		Then web-server returns contents of config. file
	
	@apache
	Defense: use Apache Web Server v2.5.51 or later
		# This defense is specific to CVE-2021-41773 & CVE-2021-42013
	 	Given web-server is Apache (version <= v2.5.50)
		Then upgrade Apache Web Server to v2.5.51 or later

	# Partially mitigates CVE-2021-41773
	Defense: Don't allow path traversal to configuration files
		Given secrets are stored in configuration file
		When request contains URL of config file
		Then block the request

	Defense: Web-server shouldn't serve config files
		Given secrets are stored in configuration file
		When request contains URL of config file
		Then web-server is configured to not serve such file types

	# Limit access on host (this is a separate model)
	Attack: Compromize web server
	Defense: Encrypt secrets before storing in file
	Defense: Store secrets and keys in vault
